{"version":3,"file":"static/js/559.736d2342.chunk.js","mappings":"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","sources":["states/page/user/login/index.tsx","components/user/login/index.tsx","pages/user/login/index.tsx","service/medic.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useState } from \"react\"\n\n// 新建数据通道\nexport interface LoginPageStates {\n    passWord: string\n    userName: string\n    showPassword: boolean\n}\n\nexport interface LoginPageStore extends LoginPageStates {\n    setPassWord: Dispatch<SetStateAction<string>>;\n    setUserName: Dispatch<SetStateAction<string>>;\n    setShowPassword: Dispatch<SetStateAction<boolean>>;\n}\n\nexport function LoginPageStore(): LoginPageStore {\n    const [passWord, setPassWord] = useState<string>('')\n    const [userName, setUserName] = useState<string>('')\n    const [showPassword, setShowPassword] = useState<boolean>(false)\n\n    return {\n        passWord,\n        userName,\n        showPassword,\n        setPassWord,\n        setUserName,\n        setShowPassword\n    }\n}\n","// ** React Imports\n// ** MUI Components\n\nimport { Link, Stack } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport MuiCard, { CardProps } from '@mui/material/Card'\nimport Checkbox from '@mui/material/Checkbox'\nimport MuiFormControlLabel, { FormControlLabelProps } from '@mui/material/FormControlLabel'\nimport { styled } from '@mui/material/styles'\nimport TextField from '@mui/material/TextField'\nimport Typography from '@mui/material/Typography'\nimport { ChangeEvent, MouseEvent } from 'react'\nimport { useNavigate } from 'react-router'\nimport { useStore } from 'reto'\nimport { login } from 'src/service/medic'\nimport { SnackBarStore } from 'src/states/global/TopSnackBarStore'\nimport { LoginPageStore } from 'src/states/page/user/login'\nimport PasswordInput from '../../common/PasswordInput'\n\n\n\n// ** Styled Components\nconst Card = styled(MuiCard)<CardProps>(({ theme }) => ({\n    [theme.breakpoints.up('sm')]: { width: '28rem' }\n}))\n\nconst LinkStyled = styled('a')(({ theme }) => ({\n    fontSize: '0.875rem',\n    textDecoration: 'none',\n    color: theme.palette.primary.main\n}))\n\nconst FormControlLabel = styled(MuiFormControlLabel)<FormControlLabelProps>(({ theme }) => ({\n    '& .MuiFormControlLabel-label': {\n        fontSize: '0.875rem',\n        color: theme.palette.text.secondary\n    }\n}))\n\nconst LoginPageWrapper = () => {\n    const states = useStore(LoginPageStore)\n    const topSnackBarStates = useStore(SnackBarStore)\n\n    const navigator = useNavigate()\n\n    const handleUserNameChange = (event: ChangeEvent<HTMLInputElement>) => {\n        states.setUserName(event.target.value)\n    }\n\n    const handlePassWordChange = (event: ChangeEvent<HTMLInputElement>) => {\n        states.setPassWord(event.target.value)\n    }\n\n    const handleClickShowPassword = () => {\n        states.setShowPassword(!states.showPassword)\n    }\n\n    const handleMouseDownPassword = (event: MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault()\n    }\n\n    const handleClickLogin = () => {\n        //check localstorage token first\n        // const refreshTime = localStorage.getItem('tokenRefreshAfter')\n        // if (refreshTime && (new Date().getTime()) < parseInt(refreshTime)) {\n        //     const now = new Date().getTime()\n        //     if (parseInt(refreshTime) > now) { //token有效\n        //         console.log('token有效')\n        //         navigator('/dashboard')\n        //         return\n        //     }\n        // }\n        login(states.userName, states.passWord).then((res) => {\n            if (res && res.code == 200) {\n                topSnackBarStates.setSnackBarMessage('登录成功')\n                topSnackBarStates.setSnackBarOpen(true)\n                topSnackBarStates.setSnackBarType('success')\n                localStorage.setItem('token', res.data.token)\n                localStorage.setItem('userName', states.userName)\n                navigator('/filemanage', { replace: true })\n            } else {\n                topSnackBarStates.setSnackBarMessage(`登录失败,${res.message}`)\n                topSnackBarStates.setSnackBarOpen(true)\n                topSnackBarStates.setSnackBarType('error')\n            }\n        }).catch((err) => {\n            topSnackBarStates.setSnackBarMessage(`登录失败,${err}`)\n            topSnackBarStates.setSnackBarOpen(true)\n            topSnackBarStates.setSnackBarType('error')\n        })\n    }\n    const navi = useNavigate()\n    return (\n        <Stack className='content-center'>\n            <Box sx={{ mb: 8, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <Typography\n                    variant='h6'\n                    sx={{\n                        lineHeight: 1,\n                        fontWeight: 600,\n                        textTransform: 'uppercase',\n                        fontSize: '1.5rem !important',\n                        userSelect: 'none'\n                    }}\n                >\n                    医疗数据共享系统\n                </Typography>\n            </Box>\n            <form noValidate autoComplete='off' onSubmit={e => e.preventDefault()}>\n                <TextField autoFocus onChange={handleUserNameChange} fullWidth id='email' label='账号' sx={{ marginBottom: 4 }} >{states.userName}</TextField>\n                <PasswordInput\n                    password={states.passWord}\n                    title={'密码'}\n                    showPassword={states.showPassword}\n                    onChange={(password) => states.setPassWord(password)}\n                    onShowPasswordChange={() => states.setShowPassword((showPassword) => !showPassword)}\n                />\n                <Box\n                    sx={{ mb: 4, display: 'flex', alignItems: 'center', flexWrap: 'wrap', justifyContent: 'space-between' }}\n                >\n                    <FormControlLabel control={<Checkbox />} label='记住我' />\n                    <Link\n                        onClick={() => { console.log('111'); navi('/user/register') }}\n                        sx={{ userSelect: 'none' }}\n                    >\n                        注册\n                    </Link>\n                </Box>\n                <Button\n                    fullWidth\n                    size='large'\n                    variant='contained'\n                    sx={{ marginBottom: 7 }}\n                    onClick={handleClickLogin}\n                >\n                    登录\n                </Button>\n            </form>\n        </Stack>\n    )\n}\n\nexport default LoginPageWrapper\n","// ** MUI Imports\n\n// ** Demo Components Imports\nimport { Provider } from 'reto'\nimport LoginPageWrapper from '../../../components/user/login'\nimport { LoginPageStore } from '../../../states/page/user/login/index'\n\nconst LoginPage = () => {\n  return (\n    <Provider of={LoginPageStore} memo>\n      <LoginPageWrapper />\n    </Provider>\n  )\n}\n\nexport default LoginPage\n","import axios from \"axios\";\nimport { ServiceResponse } from \"./common\";\nimport { FileItemData } from \"src/types/ComponentProps\";\nimport { number } from 'prop-types';\n\n/**\n * \n * @export\n * @interface ShareParam\n */\nexport interface ShareParam {\n    /**\n     * \n     * @type {string}\n     * @memberof ShareParam\n     */\n    fileName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ShareParam\n     */\n    target: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ShareParam\n     */\n    expire: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ShareParam\n     */\n    useLimit: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ShareParam\n     */\n    isGroup: boolean;\n}\n\n/**\n * \n * @export\n * @interface SharedFile\n */\nexport interface SharedFile {\n    /**\n     * \n     * @type {string}\n     * @memberof SharedFile\n     */\n    fileName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SharedFile\n     */\n    target: string;\n    /**\n     * \n     * @type {number}\n     * @memberof SharedFile\n     */\n    expire: number;\n    /**\n     * \n     * @type {number}\n     * @memberof SharedFile\n     */\n    useLimit: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SharedFile\n     */\n    isGroup: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof SharedFile\n     */\n    use: number;\n}\n\nexport interface LoginResult {\n    token: string\n}\nexport interface Login {\n    username: string\n    password: string\n}\n// {\n//     \"fileName\": \"string\",\n//     \"owner\": \"string\",\n//     \"expire\": 0,\n//     \"use\": 0,\n//     \"useLimit\": 0,\n//     \"fileSize\": 0\n// }\nexport interface File {\n    fileName: string,\n    owner: string,\n    expire: number,\n    use: number,\n    useLimit: number,\n    fileSize: number\n}\n\nexport function FileToFileItemData(idx: number, item: File): FileItemData {\n    const owner = localStorage.getItem('username')\n    return {\n        id: idx,\n        name: item.fileName,\n        size: item.fileSize,\n        state: owner == item.owner ? 'owned' : 'fromShared',\n        owner: item.owner,\n        use: item.use,\n        useLimit: item.useLimit,\n        expire: item.expire\n    }\n}\nexport function SharedFileToFileItemData(idx: number, item: SharedFile): FileItemData {\n    const owner = localStorage.getItem('username')\n    return {\n        id: idx,\n        name: item.fileName,\n        size: 0,\n        state: owner == item.target ? 'owned' : 'fromShared',\n        owner: item.target,\n        use: item.use,\n        useLimit: item.useLimit,\n        expire: item.expire\n    }\n}\n/**\n *\n * @export\n * @interface LoginResultResponse\n */\nexport const login = async (userName: string, passWord: string): Promise<ServiceResponse<LoginResult>> => {\n    const res = await axios.post('/login', { userName, passWord })\n    return res.data\n}\n\n\n/**\n *\n * @export\n * @interface LoginResultResponse\n */\nexport const getFileList = async (): Promise<ServiceResponse<Array<File>>> => {\n    const res = await axios.get('/file', { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\n    return res.data\n}\nexport const getUserList = async (): Promise<ServiceResponse<Array<string>>> => {\n    const res = await axios.get('/user', { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\n    return res.data\n}\n\n/**\n *\n * @export\n * @interface LoginResultResponse\n */\nexport const shareFile = async (param: ShareParam): Promise<ServiceResponse<undefined>> => {\n    const res = await axios.post('/file/share', param, { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\n    return res.data\n}\n\nexport const myShareFile = async (): Promise<ServiceResponse<Array<SharedFile>>> => {\n    const res = await axios.get('/file/share', { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\n    return res.data\n}\n\nexport const downloadFile = async (fileName: string): Promise<any> => {\n    const res = await axios.get(`/file/download?filename=${fileName}`, { responseType: 'blob', headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\n    return res.data\n}\n"],"names":["LoginPageStore","useState","passWord","setPassWord","userName","setUserName","showPassword","setShowPassword","FormControlLabel","styled","MuiCard","theme","breakpoints","up","width","fontSize","textDecoration","color","palette","primary","main","MuiFormControlLabel","text","secondary","states","useStore","topSnackBarStates","SnackBarStore","navigator","useNavigate","navi","Stack","className","Box","sx","mb","display","alignItems","justifyContent","Typography","variant","lineHeight","fontWeight","textTransform","userSelect","noValidate","autoComplete","onSubmit","e","preventDefault","TextField","autoFocus","onChange","event","target","value","fullWidth","id","label","marginBottom","PasswordInput","password","title","onShowPasswordChange","flexWrap","control","Checkbox","Link","onClick","console","log","Button","size","login","then","res","code","setSnackBarMessage","setSnackBarOpen","setSnackBarType","localStorage","setItem","data","token","replace","message","catch","err","of","memo","FileToFileItemData","idx","item","owner","getItem","name","fileName","fileSize","state","use","useLimit","expire","SharedFileToFileItemData","axios","getFileList","headers","getUserList","shareFile","param","myShareFile","downloadFile","responseType"],"sourceRoot":""}