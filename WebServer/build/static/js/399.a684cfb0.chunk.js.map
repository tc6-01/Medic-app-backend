{"version":3,"file":"static/js/399.a684cfb0.chunk.js","mappings":"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","sources":["components/common/OperationItem/index.tsx","components/common/Section/index.tsx","components/common/VerticalList/index.tsx","service/policyApi.ts","components/common/PolicyItem/index.tsx","components/common/PopMenu/index.tsx","components/policy-manage/PolicyOperationMenu/index.tsx","components/policy-manage/index.tsx","pages/policy-manage/index.tsx","states/page/policy-manage/index.ts","styles/NoUserSelect.ts"],"sourcesContent":["import { FileItemProps, GroupItemProps, OperationItemProps } from \"src/types/ComponentProps\"\nimport { MoreVert } from \"@material-ui/icons\";\nimport { FolderOpen } from '@mui/icons-material';\nimport { Avatar, Box, Button, Grid, Stack, Theme, Typography } from '@mui/material';\nimport { createStyles, makeStyles } from '@material-ui/core';\nimport IconButton from '@mui/material/IconButton';\n\n\nconst centerStyle = makeStyles({\n    root: {\n        '& .MuiGrid-root': {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n        },\n        '& .MuiTypography-root': {\n            display: 'flex',\n            alignItems: 'center',\n        }\n    }\n})\nconst OperationItem = ({ icon, name, onclick }: OperationItemProps) => {\n    const center = centerStyle();\n    return (\n        <IconButton onClick={() => onclick?.call(onclick)} className={center.root} sx={{ width: '100%' }}>\n            <Grid container>\n                <Grid item xs={3}>\n                    {icon}\n                </Grid>\n                <Grid item >\n                    <Typography fontWeight={'bold'} fontSize={17} noWrap>{name}</Typography>\n                </Grid>\n            </Grid>\n        </IconButton >\n    )\n}\n\n\nexport default OperationItem\n","import { Stack, Typography } from '@mui/material';\nimport { SectionProps } from \"src/types/ComponentProps\";\n\n\nconst Section = ({ title, children }: SectionProps) => {\n    return (\n        <Stack mt={1}>\n            {/* <Divider sx={{ mb: 1 }} /> */}\n            <Typography variant=\"h4\" color=\"textPrimary\" justifyContent={'left'}>{title}</Typography>\n            {children}\n        </Stack>\n    )\n}\n\n\nexport default Section\n","import { createStyles, makeStyles } from '@material-ui/core';\nimport { List, ListItem, Theme } from '@mui/material';\nimport { VerticalListProps } from \"src/types/ComponentProps\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            justifyContent: 'start',\n            userSelect: 'none',\n        },\n    }),\n);\n\n\n\nconst VerticalList = ({ items, onItemClicked }: VerticalListProps) => {\n    const classes = useStyles();\n    return (\n        <List component=\"nav\" className={classes.root} aria-label=\"contacts\" >\n            {items?.map((item, index) =>\n                <ListItem alignItems=\"center\" key={index} onClick={() => onItemClicked ? onItemClicked(index) : null}>\n                    {item}\n                </ListItem>\n            )}\n        </List>\n    )\n}\n\n\nexport default VerticalList\n","import axios, { AxiosRequestConfig } from 'axios'\nimport { Rule } from 'src/types/models/DataModels'\nimport { Policy, PolicyDataResponse, PolicyIEnumerableDataResponse } from './models'\n\nconst getPolicies = async (): Promise<PolicyDataResponse | PolicyIEnumerableDataResponse> => {\n  const res = await axios.get('/api/policy', { headers: { Authorization: 'Bearer ' + localStorage.getItem('token') } })\n  return res.data\n}\n\nconst getPolicyById = async (id: string): Promise<PolicyDataResponse> => {\n  const res = await axios.get(`/api/policy?objectId=${id}`, {\n    headers: { Authorization: 'Bearer ' + localStorage.getItem('token') }\n  })\n  return res.data\n}\n\nconst addPolicy = async (policy: Policy): Promise<Response> => {\n  const res = await axios.post('/api/policy', policy, {\n    headers: { Authorization: 'Bearer ' + localStorage.getItem('token') }\n  })\n  return res.data\n}\n\nconst updatePolicyRules = async (id: string, Rules: Rule[]): Promise<Response> => {\n  const res = await axios.put(`/api/policy?objectId=${id}`, Rules, {\n    headers: { Authorization: 'Bearer ' + localStorage.getItem('token') }\n  })\n  return res.data\n}\n\nconst deletePolicy = async (id: string): Promise<Response> => {\n  const res = await axios.delete(`/api/policy?objectId=${id}`, {\n    headers: { Authorization: 'Bearer ' + localStorage.getItem('token') }\n  })\n  return res.data\n}\n\nexport { getPolicies, getPolicyById, addPolicy, updatePolicyRules, deletePolicy }\n","import { FileItemProps, PolicyItemProps } from \"src/types/ComponentProps\";\nimport { MoreVert } from \"@material-ui/icons\";\nimport { Book, FileOpen } from '@mui/icons-material';\nimport { Avatar, Box, ListItemAvatar, ListItemText, Stack, Typography, useTheme } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\n\n\n\nconst PolicyItem = ({ name, createdTime, description, onDetailClick }: PolicyItemProps) => {\n    const theme = useTheme();\n    return (\n        <>\n            <ListItemAvatar>\n                <Avatar sx={{ backgroundColor: theme.colors.primary.light }}>\n                    <Book fontSize='large' />\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n                onClick={onDetailClick}\n                primary={name}\n                secondary={\n                    <Stack>\n                        <Typography noWrap>\n                            {description}\n                        </Typography>\n                        <Typography noWrap>\n                            {createdTime}\n                        </Typography>\n                    </Stack>\n                } />\n        </>\n    )\n}\n\n\nexport default PolicyItem\n","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Switch from '@material-ui/core/Switch';\nimport SpeedDial, { SpeedDialProps } from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport PrintIcon from '@material-ui/icons/Print';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { SpeedDialMenuProps } from 'src/types/ComponentProps';\nimport { SpeedDialMenuOptionProps } from '../../../types/ComponentProps';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            transform: 'translateZ(0px)',\n            flexGrow: 1,\n        },\n        exampleWrapper: {\n            position: 'absolute',\n            left: '97vw',\n            bottom: '10vh',\n            marginTop: theme.spacing(3),\n            height: 380,\n        },\n        radioGroup: {\n            margin: theme.spacing(1, 0),\n        },\n        toolTip: {\n            width: 100,\n            height: 100,\n            color: 'black',\n        },\n        speedDial: {\n            position: 'absolute',\n            '&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\n                bottom: theme.spacing(2),\n                right: theme.spacing(2),\n            },\n            '&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight': {\n                top: theme.spacing(2),\n                left: theme.spacing(2),\n            },\n        },\n    }),\n);\n\n\n\nexport default function SpeedDialMenu({ options }: SpeedDialMenuProps) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        <div className={classes.exampleWrapper}>\n            <SpeedDial\n                ariaLabel=\"SpeedDial example\"\n                className={classes.speedDial}\n                icon={<SpeedDialIcon />}\n                onClose={handleClose}\n                onOpen={handleOpen}\n                open={open}\n                direction={'up'}\n            >\n                {options.map((option) => (\n                    <SpeedDialAction\n                        key={option.name}\n                        icon={option.icon}\n                        tooltipTitle={option.name}\n                        onClick={option.onClick}\n                        tooltipOpen={true}\n                        TooltipClasses={{ tooltip: classes.toolTip }}\n                    />\n                ))}\n            </SpeedDial>\n        </div>\n    );\n}\n","import { Delete, ErrorOutline } from '@material-ui/icons';\nimport { Box, Stack } from '@mui/material';\nimport { FolderArrowUp } from 'mdi-material-ui';\nimport OperationItem from 'src/components/common/OperationItem';\nimport Section from 'src/components/common/Section';\nimport VerticalList from 'src/components/common/VerticalList';\nimport { PolicyOperationMenuProps } from '../../../types/ComponentProps';\nimport PolicyItem from '../../common/PolicyItem/index';\n\n\n\nconst PolicyOperationMenu = ({ policyName, onOperationClicked }: PolicyOperationMenuProps) => {\n    return (\n        <Stack m={1}>\n            <Box borderRadius={3}>\n                <Box mt={2} mb={2} width={'100%'} display='flex' justifyContent={'center'}>\n                    <PolicyItem name={policyName} createdTime={null} description={null} />\n                </Box>\n                <Section title='策略操作'>\n                    <VerticalList items={[\n                        <OperationItem icon={<FolderArrowUp fontSize='large' />} name={'编辑'} onclick={() => onOperationClicked('edit')} />,\n                        <OperationItem icon={<Delete fontSize='large' />} name={'删除'} onclick={() => onOperationClicked('delete')} />\n                    ]} />\n                </Section>\n                <Section title='更多操作'>\n                    <VerticalList items={[\n                        <OperationItem icon={<ErrorOutline fontSize='large' />} name={'详细信息'} onclick={() => onOperationClicked('detail')} />\n                    ]} />\n                </Section>\n            </Box>\n\n        </Stack>\n    )\n\n}\n\n\nexport default PolicyOperationMenu\n","// ** MUI Imports\n\n// ** Demo Components Imports\nimport { Fade, Grid, Stack, Typography } from '@mui/material';\nimport { BookOutline } from 'mdi-material-ui';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useStore } from 'reto';\nimport { deletePolicy, getPolicies } from 'src/service/policyApi';\nimport { SnackBarStore } from 'src/states/global/TopSnackBarStore';\nimport { PolicyManagePageStore } from 'src/states/page/policy-manage';\nimport { noUserSelect } from 'src/styles/NoUserSelect';\nimport { PolicyOperationType } from 'src/types/ComponentProps';\nimport { CreatePolicyPageStore } from '../../states/page/policy-manage/CreatePolicyPageStore';\nimport PolicyItem from '../common/PolicyItem';\nimport PopMenu from '../common/PopMenu';\nimport VerticalList from '../common/VerticalList';\nimport PolicyOperationMenu from './PolicyOperationMenu';\n\nconst PolicyManageWrapper = () => {\n  const navi = useNavigate()\n  const states = useStore(PolicyManagePageStore)\n  const topSnackBarStates = useStore(SnackBarStore)\n  const editPolicyStore = useStore(CreatePolicyPageStore)\n  useEffect(() => {\n    getPolicies().then(res => {\n      if (res && res.status === 0) {\n        if (Array.isArray(res.data)) {\n          console.log(res.data)\n          states.setRows(res.data)\n          states.setLoading(false)\n        } else {\n          states.setRows([res.data])\n        }\n      }\n    })\n  }, [])\n  const handlePolicyOperation = (ty: PolicyOperationType, index: number) => {\n    switch (ty) {\n      case 'delete':\n        deletePolicy(states.rows[index].id).then(res => {\n          states.setBottomDrawerOpen(false)\n          if (res && res.status === 0) {\n            states.setRows(states.rows.filter((_, i) => i !== index))\n            topSnackBarStates.setSnackBarOpen(true)\n            topSnackBarStates.setSnackBarMessage('删除成功')\n          } else {\n            topSnackBarStates.setSnackBarOpen(true)\n            topSnackBarStates.setSnackBarType('error')\n            topSnackBarStates.setSnackBarMessage('删除失败')\n          }\n        })\n        break;\n      case 'detail':\n        console.log('detail files at index', index);\n        break;\n      // case 'edit':\n      //   editPolicyStore.\n      //     states.rows[index]\n      //   break;\n    }\n  }\n\n  const onOperationClickHandler = (index: number) => {\n    states.setBottomDrawerOpen(true)\n    states.setBottomDrawerContent(\n      <PolicyOperationMenu policyName={states.rows[index].name} onOperationClicked={(ty) => handlePolicyOperation(ty, index)} />\n    )\n  }\n  return (\n    <Fade in={true}>\n      <Stack alignContent='space-around' className={noUserSelect().root}>\n        {\n          states.rows ? <VerticalList items={states.rows.map((item, index) => {\n            return <PolicyItem name={item.name} createdTime={null} description={item.description} onDetailClick={() => onOperationClickHandler(index)} />\n          })} /> : <Grid><Typography>空</Typography></Grid>\n        }\n        <PopMenu options={[\n          { name: '新建共享', icon: <BookOutline />, onClick: () => navi('/policymanage/create') },\n        ]} />\n      </Stack>\n    </Fade>\n  )\n}\n\nexport default PolicyManageWrapper\n","// ** MUI Imports\n\n// ** Demo Components Imports\nimport { makeStyles } from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\nimport { Fab } from '@mui/material'\nimport { Provider } from 'reto'\nimport { ConfirmDeleteDialogStore } from 'src/states/common/ConfirmDeleteDialogStore'\nimport { LoadingStore } from 'src/states/common/LoadingStore'\nimport { PolicyManagePageStore } from 'src/states/page/policy-manage'\nimport PolicyManageWrapper from '../../components/policy-manage/index'\n\nconst PolicyManagePage = () => {\n  return (\n    <Provider of={LoadingStore} memo>\n      <Provider of={ConfirmDeleteDialogStore} memo>\n        <Provider of={PolicyManagePageStore} memo>\n          <PolicyManageWrapper />\n        </Provider>\n      </Provider>\n    </Provider>\n  )\n}\n\nexport default PolicyManagePage\n","import { BottomDrawerStates } from '../../global/BottomDrawerStore';\nimport { Dispatch, SetStateAction, useState } from 'react'\nimport { useStore } from 'reto'\nimport { Policy } from 'src/service/models'\nimport { ConfirmDeleteDialogStore } from '../../common/ConfirmDeleteDialogStore'\nimport { LoadingStore } from 'src/states/common/LoadingStore'\nimport { BottomDrawerStore } from '../../global/BottomDrawerStore';\n\nexport interface PolicyManagePageStates {\n  rows: Policy[]\n}\n\nexport interface PolicyManagePageStore\n  extends PolicyManagePageStates,\n  LoadingStore,\n  BottomDrawerStore {\n  setRows: Dispatch<SetStateAction<Policy[]>>\n}\n\nexport function PolicyManagePageStore(): PolicyManagePageStore {\n  const loadingStore = useStore(LoadingStore)\n  const drawerStore = useStore(BottomDrawerStore)\n  const [rows, setRows] = useState<Policy[]>([])\n  return {\n    ...loadingStore,\n    ...drawerStore,\n    rows,\n    setRows,\n  }\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const noUserSelect = makeStyles({\n    root: {\n        '& > *': { userSelect: 'none' }\n    }\n})\n"],"names":["centerStyle","makeStyles","root","display","justifyContent","alignItems","icon","name","onclick","center","onClick","call","className","sx","width","container","item","xs","fontWeight","fontSize","noWrap","title","children","mt","variant","color","useStyles","theme","createStyles","userSelect","items","onItemClicked","classes","component","map","index","getPolicies","axios","headers","Authorization","localStorage","getItem","res","data","deletePolicy","id","createdTime","description","onDetailClick","useTheme","ListItemAvatar","Avatar","backgroundColor","colors","primary","light","Book","ListItemText","secondary","Stack","Typography","transform","flexGrow","exampleWrapper","position","left","bottom","marginTop","spacing","height","radioGroup","margin","toolTip","speedDial","right","top","SpeedDialMenu","options","React","open","setOpen","SpeedDial","ariaLabel","SpeedDialIcon","onClose","onOpen","direction","option","SpeedDialAction","tooltipTitle","tooltipOpen","TooltipClasses","tooltip","policyName","onOperationClicked","m","Box","borderRadius","mb","Section","VerticalList","OperationItem","FolderArrowUp","Delete","ErrorOutline","navi","useNavigate","states","useStore","PolicyManagePageStore","topSnackBarStates","SnackBarStore","CreatePolicyPageStore","useEffect","then","status","Array","isArray","console","log","setRows","setLoading","onOperationClickHandler","setBottomDrawerOpen","setBottomDrawerContent","rows","ty","filter","_","i","setSnackBarOpen","setSnackBarMessage","setSnackBarType","handlePolicyOperation","Fade","in","alignContent","noUserSelect","Grid","BookOutline","of","LoadingStore","memo","ConfirmDeleteDialogStore","loadingStore","drawerStore","BottomDrawerStore","useState"],"sourceRoot":""}