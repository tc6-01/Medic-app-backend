{"version":3,"file":"static/js/10.375fd097.chunk.js","mappings":"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","sources":["components/common/LoadingProgress/index.tsx","components/pdf-preview/index.tsx","pages/pdf-preview/index.tsx","service/medic.ts","states/page/file-share/index.ts","utils/time.ts"],"sourcesContent":["import { Box, CircularProgress, Skeleton } from \"@mui/material\"\nimport { ReactNode } from \"react\"\nimport { LoadingProps } from \"src/types/ComponentProps\"\n\n\nconst Loading = ({ loading, children }: LoadingProps) => {\n    if (loading) {\n        return <CircularProgress sx={{\n            position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%,-50%)'\n        }} />\n    }\n    else {\n        return <>{children}</>\n    }\n}\n\nexport default Loading\n","// ** MUI Imports\n\n// ** Demo Components Imports\nimport { Box, Stack } from '@mui/material';\nimport { Container } from '@mui/system';\nimport { useEffect, useState } from 'react';\nimport PDF from \"react-pdf-js\";\nimport Loading from '../common/LoadingProgress';\nimport './styles.css';\nimport { downloadFile } from 'src/service/medic';\nimport { FileItemData } from 'src/types/ComponentProps';\nimport { toLocalTimeString } from 'src/utils/time';\nconst PdfPreviewWrapper = (props) => {\n\n  //console.log(props.pdf_id)\n  const [pdfblob, setPdfBlob] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [totalPage, setTotalPages] = useState(1);\n  const fileData = props.file as FileItemData\n  useEffect(() => {\t//重点在此！！！！！如何将PDF文件流转base64\n    downloadFile(fileData.name).then(res => {\n      let blob = new Blob([res], { type: \"application/pdf\" })\n      let reader = new FileReader();\n      reader.readAsDataURL(blob); // 转换为base64，可以直接放入a标签href\n      reader.addEventListener(\"load\", function () {\n        let base64 = reader.result as string\n        setPdfBlob(base64.split(',')[1])\n        setLoading(false)\n      });\n    })\n  }, []);\n  let newpdfblob = \"data:application/pdf;base64,\" + pdfblob\n  if (!pdfblob) return null\n\n  function onDocumentLoadSuccess(totalPage: any) {\n    console.log(totalPage)\n    setTotalPages(totalPage);\n  }\n\n  function directlyRenderPdf(totalPage: number) {\n    const x = [];\n    for (let i = 2; i <= totalPage; i++) {\n      x.push(\n        <Box key={i} justifyContent={'center'} display='flex' sx={{ objectFit: 'contain' }}>\n          <PDF page={i} key={`x${i}`} scale={0.8} file={newpdfblob} />\n        </Box>)\n      x.push(<Box justifyContent={'center'} key={`c${i}`} display='flex'>{i}</Box>)\n    }\n    return x;\n  }\n\n  if (!pdfblob) return null\n  return (\n    <Loading loading={loading}>\n      <Container>\n        <Stack spacing={1} alignContent='center' pt={3} pb={3}>\n          <Box justifyContent={'center'} display='flex'>{`过期时间:${toLocalTimeString(fileData.expire)}`}</Box>\n          <Box justifyContent={'center'} display='flex'>{`剩余使用次数:${fileData.useLimit - fileData.use}`}</Box>\n          <Box justifyContent={'center'} display='flex' sx={{ objectFit: 'contain' }}>\n            <PDF scale={0.8}\n              // workerSrc='/android_asset/build/pdf.worker.js'\n              file={newpdfblob}\n              onDocumentComplete={onDocumentLoadSuccess}\n              page={1} />\n          </Box>\n          <Box justifyContent={'center'} display='flex'>1</Box>\n          {\n            totalPage > 1 && directlyRenderPdf(totalPage)\n          }\n        </Stack>\n      </Container>\n    </Loading>\n  );\n}\n\nexport default PdfPreviewWrapper\n","// ** MUI Imports\n\n// ** Demo Components Imports\nimport PdfPreviewWrapper from 'src/components/pdf-preview'\nimport { Provider } from 'reto'\nimport { ConfirmDeleteDialogStore } from 'src/states/common/ConfirmDeleteDialogStore'\nimport { LoadingStore } from 'src/states/common/LoadingStore'\nimport { FileSharePageStore } from 'src/states/page/file-share'\nimport { useLocation } from \"react-router-dom\";\nimport { FileItemData } from 'src/types/ComponentProps'\nconst PdfPreviewPage = () => {\n  const location = useLocation();\n  const file = (location.state as FileItemData);\n  document.querySelector('meta[name=\"viewport\"]').setAttribute('content', 'width=device-width, initial-scale=1.0');\n  return (\n    <Provider of={LoadingStore} memo>\n      <Provider of={ConfirmDeleteDialogStore} memo>\n        <Provider of={FileSharePageStore} memo>\n          <PdfPreviewWrapper file={file} />\n        </Provider>\n      </Provider>\n    </Provider>\n  )\n}\n\nexport default PdfPreviewPage\n","import axios from \"axios\";\nimport { ServiceResponse } from \"./common\";\nimport { FileItemData } from \"src/types/ComponentProps\";\nimport { number } from 'prop-types';\n\n/**\n * \n * @export\n * @interface ShareParam\n */\nexport interface ShareParam {\n    /**\n     * \n     * @type {string}\n     * @memberof ShareParam\n     */\n    fileName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ShareParam\n     */\n    target: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ShareParam\n     */\n    expire: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ShareParam\n     */\n    useLimit: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ShareParam\n     */\n    isGroup: boolean;\n}\n\n/**\n * \n * @export\n * @interface SharedFile\n */\nexport interface SharedFile {\n    /**\n     * \n     * @type {string}\n     * @memberof SharedFile\n     */\n    fileName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SharedFile\n     */\n    target: string;\n    /**\n     * \n     * @type {number}\n     * @memberof SharedFile\n     */\n    expire: number;\n    /**\n     * \n     * @type {number}\n     * @memberof SharedFile\n     */\n    useLimit: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SharedFile\n     */\n    isGroup: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof SharedFile\n     */\n    use: number;\n}\n\nexport interface LoginResult {\n    token: string\n}\nexport interface Login {\n    username: string\n    password: string\n}\n// {\n//     \"fileName\": \"string\",\n//     \"owner\": \"string\",\n//     \"expire\": 0,\n//     \"use\": 0,\n//     \"useLimit\": 0,\n//     \"fileSize\": 0\n// }\nexport interface File {\n    fileName: string,\n    owner: string,\n    expire: number,\n    use: number,\n    useLimit: number,\n    fileSize: number\n}\n\nexport function FileToFileItemData(idx: number, item: File): FileItemData {\n    const owner = localStorage.getItem('username')\n    return {\n        id: idx,\n        name: item.fileName,\n        size: item.fileSize,\n        state: owner == item.owner ? 'owned' : 'fromShared',\n        owner: item.owner,\n        use: item.use,\n        useLimit: item.useLimit,\n        expire: item.expire\n    }\n}\nexport function SharedFileToFileItemData(idx: number, item: SharedFile): FileItemData {\n    const owner = localStorage.getItem('username')\n    return {\n        id: idx,\n        name: item.fileName,\n        size: 0,\n        state: owner == item.target ? 'owned' : 'fromShared',\n        owner: item.target,\n        use: item.use,\n        useLimit: item.useLimit,\n        expire: item.expire\n    }\n}\n/**\n *\n * @export\n * @interface LoginResultResponse\n */\nexport const login = async (userName: string, passWord: string): Promise<ServiceResponse<LoginResult>> => {\n    const res = await axios.post('/login', { userName, passWord })\n    return res.data\n}\n\n\n/**\n *\n * @export\n * @interface LoginResultResponse\n */\nexport const getFileList = async (): Promise<ServiceResponse<Array<File>>> => {\n    const res = await axios.get('/file', { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\n    return res.data\n}\nexport const getUserList = async (): Promise<ServiceResponse<Array<string>>> => {\n    const res = await axios.get('/user', { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\n    return res.data\n}\n\n/**\n *\n * @export\n * @interface LoginResultResponse\n */\nexport const shareFile = async (param: ShareParam): Promise<ServiceResponse<undefined>> => {\n    const res = await axios.post('/file/share', param, { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\n    return res.data\n}\n\nexport const myShareFile = async (): Promise<ServiceResponse<Array<SharedFile>>> => {\n    const res = await axios.get('/file/share', { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\n    return res.data\n}\n\nexport const downloadFile = async (fileName: string): Promise<any> => {\n    const res = await axios.get(`/file/download?filename=${fileName}`, { responseType: 'blob', headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\n    return res.data\n}\n","import { Dispatch, SetStateAction, useState } from 'react'\nimport { useStore } from 'reto'\nimport { Tunnel } from 'src/service/models'\nimport { ConfirmDeleteDialogStore } from 'src/states/common/ConfirmDeleteDialogStore'\nimport { LoadingStore } from 'src/states/common/LoadingStore'\n\n\n// 新建数据通\n\nexport interface FileSharePageStates {\n  rows: Tunnel[]\n  editorDialogOpen: boolean\n  updateDialogOpen: boolean\n}\n\nexport interface FileSharePageStore\n  extends FileSharePageStates,\n  LoadingStore,\n  ConfirmDeleteDialogStore {\n  setRows: Dispatch<SetStateAction<Tunnel[]>>\n  setEditorDialogOpen: Dispatch<SetStateAction<boolean>>\n  setUpdateDialogOpen: Dispatch<SetStateAction<boolean>>\n}\n\nexport function FileSharePageStore(): FileSharePageStore {\n  const loadingStore = useStore(LoadingStore)\n  const confirmDeleteDialogStore = useStore(ConfirmDeleteDialogStore)\n  const [rows, setRows] = useState<Tunnel[]>([])\n  const [editorDialogOpen, setEditorDialogOpen] = useState(false)\n  const [updateDialogOpen, setUpdateDialogOpen] = useState(false)\n  return {\n    ...loadingStore,\n    ...confirmDeleteDialogStore,\n    rows,\n    setRows,\n    editorDialogOpen,\n    setEditorDialogOpen,\n    updateDialogOpen,\n    setUpdateDialogOpen\n  }\n}\n","//transfrom unix time stamp to date string\nexport function toLocalTimeString(unixTime: number): string {\n    const date = new Date(unixTime);\n    return date.toLocaleString();\n}\n"],"names":["loading","children","CircularProgress","sx","position","left","top","transform","props","useState","pdfblob","setPdfBlob","setLoading","totalPage","setTotalPages","fileData","file","useEffect","downloadFile","name","then","res","blob","Blob","type","reader","FileReader","readAsDataURL","addEventListener","base64","result","split","newpdfblob","Container","Stack","spacing","alignContent","pt","pb","Box","justifyContent","display","toLocalTimeString","expire","useLimit","use","objectFit","scale","onDocumentComplete","console","log","page","x","i","push","directlyRenderPdf","useLocation","state","document","querySelector","setAttribute","of","LoadingStore","memo","ConfirmDeleteDialogStore","FileSharePageStore","FileToFileItemData","idx","item","owner","localStorage","getItem","id","fileName","size","fileSize","SharedFileToFileItemData","target","login","userName","passWord","axios","data","getFileList","headers","getUserList","shareFile","param","myShareFile","responseType","loadingStore","useStore","confirmDeleteDialogStore","rows","setRows","editorDialogOpen","setEditorDialogOpen","updateDialogOpen","setUpdateDialogOpen","unixTime","Date","toLocaleString"],"sourceRoot":""}